{
  "files": [
    //"certora/munged/contracts/src/Allowlist.1.sol:AllowlistV1",
    //"certora/munged/contracts/src/CoverageFund.1.sol:CoverageFundV1",
    //"certora/munged/contracts/src/ELFeeRecipient.1.sol:ELFeeRecipientV1",
    //"certora/munged/contracts/src/OperatorsRegistry.1.sol:OperatorsRegistryV1",
    "certora/harness/OperatorsRegistryV1Harness.sol:OperatorsRegistryV1Harness",
    //"certora/harness/RedeemManagerV1Harness.sol",
    //"certora/munged/contracts/src/Withdraw.1.sol:WithdrawV1",
    //"certora/munged/contracts/src/mock/DepositContractMock.sol", // This is needed only when working with the Ethereum network outside.
  ],

  "link" : [],
  "server": "production",
  "prover_version": "master",
  //"prover_version": "yoav/optimizeAfterSplit2",
  //"prover_version": "jtoman/cert-4706",
  "rule_sanity": "basic",
  // loop_iter 4 is required for setConsensusLayerData()
  // loop_iter 5 is required for OperatorsRegistryV1.addValidators() which calls LibBytes.slice()
 
  "optimistic_loop": true,
  "packages": ["openzeppelin-contracts=lib/openzeppelin-contracts"],
  "optimistic_hashing": true,
  //"hashing_length_bound": "512",
  "solc": "solc8.20",
  "multi_assert_check": true,
  "smt_timeout": "5000",
  "prover_args": [
    //"-copyLoopUnroll 5",
    "-optimisticFallback true",
    "-enableCopyLoopRewrites true",
    //"-smt_LIASolvers [cvc4:def,cvc5:def,cvc5:lin,cvc5:q,yices:def,z3:arith2,z3:lia2]",
    //"-smt_NIASolvers [z3:eq1]",
    //"-singleRaceSolverConfig true", //will turn off NIA unless -smt_useNIA true
    //"-smt_useLIA false",
    //"-smt_useNIA true",
    //"-calltraceFreeOpt true"  // applies some strong optimizations that might break call trace

    //"-depth 0",
    //"-smt_initialSplitDepth 2",
    //"-mediumTimeout 10000",
    ],
  //"optimistic_summary_recursion": true,
  //"summary_recursion_limit" : "1",

"loop_iter": "2",
//"verify": "OperatorsRegistryV1Harness:certora/specs/OperatorRegistryV1.spec",
"verify": "OperatorsRegistryV1Harness:certora/specs/OperatorRegistryV1_finishedRules.spec",
//"verify": "OperatorsRegistryV1Harness:certora/specs/OperatorRegistryV1ValidatorStates.spec",

//"rule": [ "operatorsStatesRemainValid_LI2_cond1_removeValidators", "operatorsStatesRemainValid_LI2_cond2_removeValidators", ],
//"rule": [ "method_reachability", ],
"rule": [ "whoCanDeactivateOperator_LI2" ],
"msg": "whoCanDeactivateOperator_LI2 LI2 op2",

}
