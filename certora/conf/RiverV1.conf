{
  "files": [
    "certora/harness/RiverV1Harness.sol",
    "certora/helpers/OperatorsRegistryMock.sol",
    "contracts/src/Allowlist.1.sol:AllowlistV1",
    "contracts/src/CoverageFund.1.sol:CoverageFundV1",
    "contracts/src/ELFeeRecipient.1.sol:ELFeeRecipientV1",
    "certora/harness/RedeemManagerV1Harness.sol",
    "contracts/src/Withdraw.1.sol:WithdrawV1",
    "contracts/src/mock/DepositContractMock.sol",
  ],
  "verify": "RiverV1Harness:certora/specs/RiverV1.spec",
  "loop_iter": "3",
  "optimistic_loop": true,
  "packages": ["openzeppelin-contracts=lib/openzeppelin-contracts"],
  "optimistic_hashing": true,
  "solc": "solc8.20",
  "global_timeout": "6000",
    "prover_args": [
    "-recursionEntryLimit 1",
    "-recursionErrorAsAssert false",
    "-contractRecursionLimit 1", // River.resolveRedeemRequests(uint32[]) calls RedeemManager.resolveRedeemRequests(uint32[]) 
    "-optimisticFallback true", // does not take to much additional time
    "-depth 7",
    "-s z3",
    "-copyLoopUnroll 6",
  ],
  "smt_timeout":"1500",
  "optimistic_summary_recursion": true,
  "summary_recursion_limit" : "1",
  "server": "production",
  "parametric_contracts": ["RiverV1Harness"],
  "msg": "RiverV1",
}
