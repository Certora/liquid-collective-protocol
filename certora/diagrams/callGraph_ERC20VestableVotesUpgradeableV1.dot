digraph G {
  graph [ ratio = "auto", page = "100", compound =true, bgcolor = "#2e3e56" ];
  node [ style = "filled", fillcolor = "#edad56", color = "#edad56", penwidth =3 ];
  edge [ color = "#fcfcfc", penwidth =2, fontname = "helvetica Neue Ultra Light" ];
subgraph "clusterERC20VestableVotesUpgradeableV1" {
  graph [ label = "ERC20VestableVotesUpgradeableV1", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "ERC20VestableVotesUpgradeableV1.__ERC20VestableVotes_init" [ label = "__ERC20VestableVotes_init", color = "#f2c383", fillcolor = "#f2c383" ];
  "ERC20VestableVotesUpgradeableV1.__ERC20VestableVotes_init_unchained" [ label = "__ERC20VestableVotes_init_unchained", color = "#f2c383", fillcolor = "#f2c383" ];
  "ERC20VestableVotesUpgradeableV1.migrateVestingSchedulesFromV1ToV2" [ label = "migrateVestingSchedulesFromV1ToV2", color = "#f2c383", fillcolor = "#f2c383" ];
  "ERC20VestableVotesUpgradeableV1.getVestingSchedule" [ label = "getVestingSchedule", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ERC20VestableVotesUpgradeableV1.isGlobalUnlockedScheduleIgnored" [ label = "isGlobalUnlockedScheduleIgnored", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ERC20VestableVotesUpgradeableV1.getVestingScheduleCount" [ label = "getVestingScheduleCount", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ERC20VestableVotesUpgradeableV1.vestingEscrow" [ label = "vestingEscrow", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ERC20VestableVotesUpgradeableV1.computeVestingReleasableAmount" [ label = "computeVestingReleasableAmount", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ERC20VestableVotesUpgradeableV1.computeVestingVestedAmount" [ label = "computeVestingVestedAmount", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ERC20VestableVotesUpgradeableV1.createVestingSchedule" [ label = "createVestingSchedule", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ERC20VestableVotesUpgradeableV1.revokeVestingSchedule" [ label = "revokeVestingSchedule", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ERC20VestableVotesUpgradeableV1.releaseVestingSchedule" [ label = "releaseVestingSchedule", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ERC20VestableVotesUpgradeableV1.delegateVestingEscrow" [ label = "delegateVestingEscrow", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" [ label = "_createVestingSchedule" ];
  "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule" [ label = "_revokeVestingSchedule" ];
  "ERC20VestableVotesUpgradeableV1._releaseVestingSchedule" [ label = "_releaseVestingSchedule" ];
  "ERC20VestableVotesUpgradeableV1._delegateVestingEscrow" [ label = "_delegateVestingEscrow" ];
  "ERC20VestableVotesUpgradeableV1._deterministicVestingEscrow" [ label = "_deterministicVestingEscrow" ];
  "ERC20VestableVotesUpgradeableV1._computeVestingReleasableAmount" [ label = "_computeVestingReleasableAmount" ];
  "ERC20VestableVotesUpgradeableV1._computeVestedAmount" [ label = "_computeVestedAmount" ];
  "ERC20VestableVotesUpgradeableV1._computeGlobalUnlocked" [ label = "_computeGlobalUnlocked" ];
  "ERC20VestableVotesUpgradeableV1._getCurrentTime" [ label = "_getCurrentTime" ];
  "ERC20VestableVotesUpgradeableV1.balanceOf" [ label = "balanceOf" ];
  "ERC20VestableVotesUpgradeableV1.UnsufficientVestingScheduleCreatorBalance" [ label = "UnsufficientVestingScheduleCreatorBalance" ];
  "ERC20VestableVotesUpgradeableV1.InvalidVestingScheduleParameter" [ label = "InvalidVestingScheduleParameter" ];
  "ERC20VestableVotesUpgradeableV1._transfer" [ label = "_transfer" ];
  "ERC20VestableVotesUpgradeableV1._delegate" [ label = "_delegate" ];
  "ERC20VestableVotesUpgradeableV1.CreatedVestingSchedule" [ label = "CreatedVestingSchedule" ];
  "ERC20VestableVotesUpgradeableV1.VestingScheduleNotRevocableInPast" [ label = "VestingScheduleNotRevocableInPast" ];
  "ERC20VestableVotesUpgradeableV1.VestingScheduleNotRevocable" [ label = "VestingScheduleNotRevocable" ];
  "ERC20VestableVotesUpgradeableV1.InvalidRevokedVestingScheduleEnd" [ label = "InvalidRevokedVestingScheduleEnd" ];
  "ERC20VestableVotesUpgradeableV1.RevokedVestingSchedule" [ label = "RevokedVestingSchedule" ];
  "ERC20VestableVotesUpgradeableV1.ZeroReleasableAmount" [ label = "ZeroReleasableAmount" ];
  "ERC20VestableVotesUpgradeableV1.ReleasedVestingSchedule" [ label = "ReleasedVestingSchedule" ];
  "ERC20VestableVotesUpgradeableV1.delegates" [ label = "delegates" ];
  "ERC20VestableVotesUpgradeableV1.DelegatedVestingEscrow" [ label = "DelegatedVestingEscrow" ];
  "ERC20VestableVotesUpgradeableV1.VestingScheduleIsLocked" [ label = "VestingScheduleIsLocked" ];
  "ERC20VestableVotesUpgradeableV1.GlobalUnlockUnderlfow" [ label = "GlobalUnlockUnderlfow" ];
}

subgraph "clusterVestingSchedulesV2" {
  graph [ label = "VestingSchedulesV2", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "VestingSchedulesV2.getCount" [ label = "getCount" ];
  "VestingSchedulesV2.migrateVestingScheduleFromV1" [ label = "migrateVestingScheduleFromV1" ];
  "VestingSchedulesV2.get" [ label = "get" ];
  "VestingSchedulesV2.VestingSchedule" [ label = "VestingSchedule" ];
}

subgraph "clusterVestingSchedulesV1" {
  graph [ label = "VestingSchedulesV1", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "VestingSchedulesV1.getCount" [ label = "getCount" ];
  "VestingSchedulesV1.get" [ label = "get" ];
}

subgraph "clusterLibUint256" {
  graph [ label = "LibUint256", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "LibUint256.min" [ label = "min" ];
}

subgraph "clusterIgnoreGlobalUnlockSchedule" {
  graph [ label = "IgnoreGlobalUnlockSchedule", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "IgnoreGlobalUnlockSchedule.get" [ label = "get" ];
  "IgnoreGlobalUnlockSchedule.set" [ label = "set" ];
}

subgraph "clusterLibErrors" {
  graph [ label = "LibErrors", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "LibErrors.Unauthorized" [ label = "Unauthorized" ];
}

  "ERC20VestableVotesUpgradeableV1.migrateVestingSchedulesFromV1ToV2";
  "VestingSchedulesV2.getCount";
  "VestingSchedulesV1.getCount";
  "VestingSchedulesV1.get";
  "LibUint256.min";
  "ERC20VestableVotesUpgradeableV1.balanceOf";
  "ERC20VestableVotesUpgradeableV1._deterministicVestingEscrow";
  "VestingSchedulesV2.migrateVestingScheduleFromV1";
  "ERC20VestableVotesUpgradeableV1.getVestingSchedule";
  "VestingSchedulesV2.get";
  "ERC20VestableVotesUpgradeableV1.isGlobalUnlockedScheduleIgnored";
  "IgnoreGlobalUnlockSchedule.get";
  "ERC20VestableVotesUpgradeableV1.getVestingScheduleCount";
  "ERC20VestableVotesUpgradeableV1.vestingEscrow";
  "ERC20VestableVotesUpgradeableV1.computeVestingReleasableAmount";
  "ERC20VestableVotesUpgradeableV1._computeVestingReleasableAmount";
  "ERC20VestableVotesUpgradeableV1.computeVestingVestedAmount";
  "ERC20VestableVotesUpgradeableV1._computeVestedAmount";
  "ERC20VestableVotesUpgradeableV1._getCurrentTime";
  "ERC20VestableVotesUpgradeableV1.createVestingSchedule";
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule";
  "ERC20VestableVotesUpgradeableV1.revokeVestingSchedule";
  "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule";
  "ERC20VestableVotesUpgradeableV1.releaseVestingSchedule";
  "ERC20VestableVotesUpgradeableV1._releaseVestingSchedule";
  "ERC20VestableVotesUpgradeableV1.delegateVestingEscrow";
  "ERC20VestableVotesUpgradeableV1._delegateVestingEscrow";
  "ERC20VestableVotesUpgradeableV1.UnsufficientVestingScheduleCreatorBalance";
  "ERC20VestableVotesUpgradeableV1.InvalidVestingScheduleParameter";
  "VestingSchedulesV2.VestingSchedule";
  "IgnoreGlobalUnlockSchedule.set";
  "ERC20VestableVotesUpgradeableV1._transfer";
  "ERC20VestableVotesUpgradeableV1._delegate";
  "ERC20VestableVotesUpgradeableV1.CreatedVestingSchedule";
  "ERC20VestableVotesUpgradeableV1.VestingScheduleNotRevocableInPast";
  "ERC20VestableVotesUpgradeableV1.VestingScheduleNotRevocable";
  "ERC20VestableVotesUpgradeableV1.InvalidRevokedVestingScheduleEnd";
  "LibErrors.Unauthorized";
  "ERC20VestableVotesUpgradeableV1.RevokedVestingSchedule";
  "ERC20VestableVotesUpgradeableV1.ZeroReleasableAmount";
  "ERC20VestableVotesUpgradeableV1.ReleasedVestingSchedule";
  "ERC20VestableVotesUpgradeableV1.delegates";
  "ERC20VestableVotesUpgradeableV1.DelegatedVestingEscrow";
  "ERC20VestableVotesUpgradeableV1.VestingScheduleIsLocked";
  "ERC20VestableVotesUpgradeableV1._computeGlobalUnlocked";
  "ERC20VestableVotesUpgradeableV1.GlobalUnlockUnderlfow";
  "ERC20VestableVotesUpgradeableV1.migrateVestingSchedulesFromV1ToV2" -> "VestingSchedulesV2.getCount" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1.migrateVestingSchedulesFromV1ToV2" -> "VestingSchedulesV1.getCount" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1.migrateVestingSchedulesFromV1ToV2" -> "VestingSchedulesV1.get" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1.migrateVestingSchedulesFromV1ToV2" -> "LibUint256.min" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1.migrateVestingSchedulesFromV1ToV2" -> "ERC20VestableVotesUpgradeableV1.balanceOf" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1.migrateVestingSchedulesFromV1ToV2" -> "ERC20VestableVotesUpgradeableV1._deterministicVestingEscrow" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1.migrateVestingSchedulesFromV1ToV2" -> "VestingSchedulesV2.migrateVestingScheduleFromV1" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1.getVestingSchedule" -> "VestingSchedulesV2.get" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1.isGlobalUnlockedScheduleIgnored" -> "IgnoreGlobalUnlockSchedule.get" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1.getVestingScheduleCount" -> "VestingSchedulesV2.getCount" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1.vestingEscrow" -> "ERC20VestableVotesUpgradeableV1._deterministicVestingEscrow" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1.computeVestingReleasableAmount" -> "VestingSchedulesV2.get" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1.computeVestingReleasableAmount" -> "ERC20VestableVotesUpgradeableV1._computeVestingReleasableAmount" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1.computeVestingVestedAmount" -> "VestingSchedulesV2.get" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1.computeVestingVestedAmount" -> "ERC20VestableVotesUpgradeableV1._computeVestedAmount" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1.computeVestingVestedAmount" -> "LibUint256.min" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1.computeVestingVestedAmount" -> "ERC20VestableVotesUpgradeableV1._getCurrentTime" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1.createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._createVestingSchedule" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1.revokeVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1.releaseVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._releaseVestingSchedule" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1.delegateVestingEscrow" -> "ERC20VestableVotesUpgradeableV1._delegateVestingEscrow" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.balanceOf" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.UnsufficientVestingScheduleCreatorBalance" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.InvalidVestingScheduleParameter" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.InvalidVestingScheduleParameter" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.InvalidVestingScheduleParameter" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.InvalidVestingScheduleParameter" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.InvalidVestingScheduleParameter" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.InvalidVestingScheduleParameter" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.InvalidVestingScheduleParameter" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.InvalidVestingScheduleParameter" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "VestingSchedulesV2.VestingSchedule" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "IgnoreGlobalUnlockSchedule.set" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._deterministicVestingEscrow" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._transfer" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._delegate" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._delegate" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._createVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.CreatedVestingSchedule" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.VestingScheduleNotRevocableInPast" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule" -> "VestingSchedulesV2.get" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.VestingScheduleNotRevocable" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.InvalidRevokedVestingScheduleEnd" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule" -> "LibErrors.Unauthorized" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._computeVestedAmount" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._computeVestedAmount" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._deterministicVestingEscrow" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._transfer" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._revokeVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.RevokedVestingSchedule" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._releaseVestingSchedule" -> "VestingSchedulesV2.get" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1._releaseVestingSchedule" -> "LibErrors.Unauthorized" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1._releaseVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._computeVestingReleasableAmount" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._releaseVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.ZeroReleasableAmount" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._releaseVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._deterministicVestingEscrow" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._releaseVestingSchedule" -> "ERC20VestableVotesUpgradeableV1._transfer" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._releaseVestingSchedule" -> "ERC20VestableVotesUpgradeableV1.ReleasedVestingSchedule" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._delegateVestingEscrow" -> "VestingSchedulesV2.get" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1._delegateVestingEscrow" -> "LibErrors.Unauthorized" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1._delegateVestingEscrow" -> "ERC20VestableVotesUpgradeableV1._deterministicVestingEscrow" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._delegateVestingEscrow" -> "ERC20VestableVotesUpgradeableV1.delegates" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._delegateVestingEscrow" -> "ERC20VestableVotesUpgradeableV1._delegate" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._delegateVestingEscrow" -> "ERC20VestableVotesUpgradeableV1.DelegatedVestingEscrow" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._computeVestingReleasableAmount" -> "ERC20VestableVotesUpgradeableV1._getCurrentTime" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._computeVestingReleasableAmount" -> "ERC20VestableVotesUpgradeableV1.VestingScheduleIsLocked" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._computeVestingReleasableAmount" -> "ERC20VestableVotesUpgradeableV1._computeVestedAmount" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._computeVestingReleasableAmount" -> "IgnoreGlobalUnlockSchedule.get" [ color = "white" ];
  "ERC20VestableVotesUpgradeableV1._computeVestingReleasableAmount" -> "ERC20VestableVotesUpgradeableV1._computeGlobalUnlocked" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._computeVestingReleasableAmount" -> "ERC20VestableVotesUpgradeableV1.GlobalUnlockUnderlfow" [ color = "#1bc6a6" ];
  "ERC20VestableVotesUpgradeableV1._computeVestingReleasableAmount" -> "LibUint256.min" [ color = "white" ];


rankdir=LR
node [shape=plaintext]
subgraph cluster_01 { 
label = "Legend";
key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td align="right" port="i1">Internal Call</td></tr>
  <tr><td align="right" port="i2">External Call</td></tr>
  <tr><td align="right" port="i3">Defined Contract</td></tr>
  <tr><td align="right" port="i4">Undefined Contract</td></tr>
  </table>>]
key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td port="i1">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i2">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i3" bgcolor="#445773">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i4">
    <table border="1" cellborder="0" cellspacing="0" cellpadding="7" color="#e8726d">
      <tr>
       <td></td>
      </tr>
     </table>
  </td></tr>
  </table>>]
key:i1:e -> key2:i1:w [color="#1bc6a6"]
key:i2:e -> key2:i2:w [color="white"]
}
}
