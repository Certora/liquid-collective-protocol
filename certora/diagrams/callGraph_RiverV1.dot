digraph G {
  graph [ ratio = "auto", page = "100", compound =true, bgcolor = "#2e3e56" ];
  node [ style = "filled", fillcolor = "#edad56", color = "#edad56", penwidth =3 ];
  edge [ color = "#fcfcfc", penwidth =2, fontname = "helvetica Neue Ultra Light" ];
subgraph "clusterRiverV1" {
  graph [ label = "RiverV1", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "RiverV1.initRiverV1" [ label = "initRiverV1", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.initRiverV1_1" [ label = "initRiverV1_1", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.initRiverV1_2" [ label = "initRiverV1_2", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.getGlobalFee" [ label = "getGlobalFee", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.getAllowlist" [ label = "getAllowlist", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.getCollector" [ label = "getCollector", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.getELFeeRecipient" [ label = "getELFeeRecipient", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.getCoverageFund" [ label = "getCoverageFund", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.getRedeemManager" [ label = "getRedeemManager", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.getMetadataURI" [ label = "getMetadataURI", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.getDailyCommittableLimits" [ label = "getDailyCommittableLimits", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.setDailyCommittableLimits" [ label = "setDailyCommittableLimits", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.getBalanceToRedeem" [ label = "getBalanceToRedeem", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.resolveRedeemRequests" [ label = "resolveRedeemRequests", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.requestRedeem" [ label = "requestRedeem", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.claimRedeemRequests" [ label = "claimRedeemRequests", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.setGlobalFee" [ label = "setGlobalFee", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.setAllowlist" [ label = "setAllowlist", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.setCollector" [ label = "setCollector", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.setELFeeRecipient" [ label = "setELFeeRecipient", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.setCoverageFund" [ label = "setCoverageFund", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.setMetadataURI" [ label = "setMetadataURI", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.getOperatorsRegistry" [ label = "getOperatorsRegistry", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "RiverV1.sendELFees" [ label = "sendELFees", color = "brown", fillcolor = "#ffbdb9" ];
  "RiverV1.sendCLFunds" [ label = "sendCLFunds", color = "brown", fillcolor = "#ffbdb9" ];
  "RiverV1.sendCoverageFunds" [ label = "sendCoverageFunds", color = "brown", fillcolor = "#ffbdb9" ];
  "RiverV1.sendRedeemManagerExceedingFunds" [ label = "sendRedeemManagerExceedingFunds", color = "brown", fillcolor = "#ffbdb9" ];
  "RiverV1._getRiverAdmin" [ label = "_getRiverAdmin", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._onTransfer" [ label = "_onTransfer", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._onDeposit" [ label = "_onDeposit", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._getNextValidators" [ label = "_getNextValidators", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._pullELFees" [ label = "_pullELFees", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._pullCoverageFunds" [ label = "_pullCoverageFunds", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._onEarnings" [ label = "_onEarnings", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._assetBalance" [ label = "_assetBalance" ];
  "RiverV1._setDailyCommittableLimits" [ label = "_setDailyCommittableLimits" ];
  "RiverV1._setBalanceToDeposit" [ label = "_setBalanceToDeposit" ];
  "RiverV1._setBalanceToRedeem" [ label = "_setBalanceToRedeem", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._setCommittedBalance" [ label = "_setCommittedBalance" ];
  "RiverV1._pullCLFunds" [ label = "_pullCLFunds", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._pullRedeemManagerExceedingEth" [ label = "_pullRedeemManagerExceedingEth", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._reportWithdrawToRedeemManager" [ label = "_reportWithdrawToRedeemManager", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" [ label = "_requestExitsBasedOnRedeemDemandAfterRebalancings", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._skimExcessBalanceToRedeem" [ label = "_skimExcessBalanceToRedeem", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._commitBalanceToDeposit" [ label = "_commitBalanceToDeposit", color = "#f2c383", fillcolor = "#f2c383" ];
  "RiverV1._setAdmin" [ label = "_setAdmin" ];
  "RiverV1.SetCollector" [ label = "SetCollector" ];
  "RiverV1.SetGlobalFee" [ label = "SetGlobalFee" ];
  "RiverV1.SetELFeeRecipient" [ label = "SetELFeeRecipient" ];
  "RiverV1.SetAllowlist" [ label = "SetAllowlist" ];
  "RiverV1.SetOperatorsRegistry" [ label = "SetOperatorsRegistry" ];
  "RiverV1.SetRedeemManager" [ label = "SetRedeemManager" ];
  "RiverV1.initOracleManagerV1_1" [ label = "initOracleManagerV1_1" ];
  "RiverV1._approve" [ label = "_approve" ];
  "RiverV1.type" [ label = "type" ];
  "RiverV1.IRedeemManagerV1" [ label = "IRedeemManagerV1" ];
  "RiverV1.IAllowlistV1" [ label = "IAllowlistV1" ];
  "RiverV1._transfer" [ label = "_transfer" ];
  "RiverV1.SetCoverageFund" [ label = "SetCoverageFund" ];
  "RiverV1.SetMetadataURI" [ label = "SetMetadataURI" ];
  "RiverV1.Denied" [ label = "Denied" ];
  "RiverV1.IOperatorsRegistryV1" [ label = "IOperatorsRegistryV1" ];
  "RiverV1.IELFeeRecipientV1" [ label = "IELFeeRecipientV1" ];
  "RiverV1.payable" [ label = "payable" ];
  "RiverV1.PulledELFees" [ label = "PulledELFees" ];
  "RiverV1.ICoverageFundV1" [ label = "ICoverageFundV1" ];
  "RiverV1.PulledCoverageFunds" [ label = "PulledCoverageFunds" ];
  "RiverV1._totalSupply" [ label = "_totalSupply" ];
  "RiverV1.ZeroMintedShares" [ label = "ZeroMintedShares" ];
  "RiverV1._mintRawShares" [ label = "_mintRawShares" ];
  "RiverV1.RewardsEarned" [ label = "RewardsEarned" ];
  "RiverV1.SetMaxDailyCommittableAmounts" [ label = "SetMaxDailyCommittableAmounts" ];
  "RiverV1.SetBalanceToDeposit" [ label = "SetBalanceToDeposit" ];
  "RiverV1.SetBalanceToRedeem" [ label = "SetBalanceToRedeem" ];
  "RiverV1.SetBalanceCommittedToDeposit" [ label = "SetBalanceCommittedToDeposit" ];
  "RiverV1.IWithdrawV1" [ label = "IWithdrawV1" ];
  "RiverV1.InvalidPulledClFundsAmount" [ label = "InvalidPulledClFundsAmount" ];
  "RiverV1.PulledCLFunds" [ label = "PulledCLFunds" ];
  "RiverV1.PulledRedeemManagerExceedingEth" [ label = "PulledRedeemManagerExceedingEth" ];
  "RiverV1._balanceFromShares" [ label = "_balanceFromShares" ];
  "RiverV1._sharesFromBalance" [ label = "_sharesFromBalance" ];
  "RiverV1.ReportedRedeemManager" [ label = "ReportedRedeemManager" ];
  "RiverV1._burnRawShares" [ label = "_burnRawShares" ];
}

subgraph "clusterCollectorAddress" {
  graph [ label = "CollectorAddress", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "CollectorAddress.set" [ label = "set" ];
  "CollectorAddress.get" [ label = "get" ];
}

subgraph "clusterGlobalFee" {
  graph [ label = "GlobalFee", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "GlobalFee.set" [ label = "set" ];
  "GlobalFee.get" [ label = "get" ];
}

subgraph "clusterELFeeRecipientAddress" {
  graph [ label = "ELFeeRecipientAddress", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "ELFeeRecipientAddress.set" [ label = "set" ];
  "ELFeeRecipientAddress.get" [ label = "get" ];
}

subgraph "clusterAllowlistAddress" {
  graph [ label = "AllowlistAddress", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "AllowlistAddress.set" [ label = "set" ];
  "AllowlistAddress.get" [ label = "get" ];
}

subgraph "clusterOperatorsRegistryAddress" {
  graph [ label = "OperatorsRegistryAddress", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "OperatorsRegistryAddress.set" [ label = "set" ];
  "OperatorsRegistryAddress.get" [ label = "get" ];
}

subgraph "clusterConsensusLayerDepositManagerV1" {
  graph [ label = "ConsensusLayerDepositManagerV1", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "ConsensusLayerDepositManagerV1.initConsensusLayerDepositManagerV1" [ label = "initConsensusLayerDepositManagerV1" ];
}

subgraph "clusterOracleManagerV1" {
  graph [ label = "OracleManagerV1", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "OracleManagerV1.initOracleManagerV1" [ label = "initOracleManagerV1" ];
}

subgraph "clusterRedeemManagerAddress" {
  graph [ label = "RedeemManagerAddress", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "RedeemManagerAddress.set" [ label = "set" ];
  "RedeemManagerAddress.get" [ label = "get" ];
}

subgraph "clusterDailyCommittableLimits" {
  graph [ label = "DailyCommittableLimits", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "DailyCommittableLimits.DailyCommittableLimitsStruct" [ label = "DailyCommittableLimitsStruct" ];
  "DailyCommittableLimits.get" [ label = "get" ];
  "DailyCommittableLimits.set" [ label = "set" ];
}

subgraph "clusterCommittedBalance" {
  graph [ label = "CommittedBalance", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "CommittedBalance.get" [ label = "get" ];
  "CommittedBalance.set" [ label = "set" ];
}

subgraph "clusterBalanceToDeposit" {
  graph [ label = "BalanceToDeposit", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "BalanceToDeposit.get" [ label = "get" ];
  "BalanceToDeposit.set" [ label = "set" ];
}

subgraph "clusterCoverageFundAddress" {
  graph [ label = "CoverageFundAddress", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "CoverageFundAddress.get" [ label = "get" ];
  "CoverageFundAddress.set" [ label = "set" ];
}

subgraph "clusterMetadataURI" {
  graph [ label = "MetadataURI", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "MetadataURI.get" [ label = "get" ];
  "MetadataURI.set" [ label = "set" ];
}

subgraph "clusterBalanceToRedeem" {
  graph [ label = "BalanceToRedeem", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "BalanceToRedeem.get" [ label = "get" ];
  "BalanceToRedeem.set" [ label = "set" ];
}

subgraph "clusterLibSanitize" {
  graph [ label = "LibSanitize", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "LibSanitize._notEmptyString" [ label = "_notEmptyString" ];
}

subgraph "clusterLibErrors" {
  graph [ label = "LibErrors", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "LibErrors.Unauthorized" [ label = "Unauthorized" ];
}

subgraph "clusterWithdrawalCredentials" {
  graph [ label = "WithdrawalCredentials", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "WithdrawalCredentials.getAddress" [ label = "getAddress" ];
}

subgraph "clusterAdministrable" {
  graph [ label = "Administrable", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "Administrable._getAdmin" [ label = "_getAdmin" ];
}

subgraph "clusterIAllowlistV1" {
  graph [ label = "IAllowlistV1", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "IAllowlistV1.isDenied" [ label = "isDenied" ];
  "IAllowlistV1.onlyAllowed" [ label = "onlyAllowed" ];
}

subgraph "clusterSharesManagerV1" {
  graph [ label = "SharesManagerV1", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "SharesManagerV1._mintShares" [ label = "_mintShares" ];
}

subgraph "clusterLastConsensusLayerReport" {
  graph [ label = "LastConsensusLayerReport", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "LastConsensusLayerReport.get" [ label = "get" ];
}

subgraph "clusterDepositedValidatorCount" {
  graph [ label = "DepositedValidatorCount", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "DepositedValidatorCount.get" [ label = "get" ];
}

subgraph "clusterIRedeemManagerV1" {
  graph [ label = "IRedeemManagerV1", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "IRedeemManagerV1.getRedeemDemand" [ label = "getRedeemDemand" ];
}

subgraph "clusterLibUint256" {
  graph [ label = "LibUint256", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "LibUint256.min" [ label = "min" ];
  "LibUint256.ceil" [ label = "ceil" ];
  "LibUint256.max" [ label = "max" ];
}

subgraph "clusterIOperatorsRegistryV1" {
  graph [ label = "IOperatorsRegistryV1", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "IOperatorsRegistryV1.getStoppedAndRequestedExitCounts" [ label = "getStoppedAndRequestedExitCounts" ];
  "IOperatorsRegistryV1.demandValidatorExits" [ label = "demandValidatorExits" ];
}

  "RiverV1.initRiverV1";
  "RiverV1._setAdmin";
  "CollectorAddress.set";
  "RiverV1.SetCollector";
  "GlobalFee.set";
  "RiverV1.SetGlobalFee";
  "ELFeeRecipientAddress.set";
  "RiverV1.SetELFeeRecipient";
  "AllowlistAddress.set";
  "RiverV1.SetAllowlist";
  "OperatorsRegistryAddress.set";
  "RiverV1.SetOperatorsRegistry";
  "ConsensusLayerDepositManagerV1.initConsensusLayerDepositManagerV1";
  "OracleManagerV1.initOracleManagerV1";
  "RiverV1.initRiverV1_1";
  "RedeemManagerAddress.set";
  "RiverV1.SetRedeemManager";
  "RiverV1._setDailyCommittableLimits";
  "DailyCommittableLimits.DailyCommittableLimitsStruct";
  "RiverV1.initOracleManagerV1_1";
  "RiverV1._approve";
  "RiverV1.type";
  "RiverV1.initRiverV1_2";
  "CommittedBalance.get";
  "RiverV1._setCommittedBalance";
  "RiverV1._setBalanceToDeposit";
  "BalanceToDeposit.get";
  "RiverV1.getGlobalFee";
  "GlobalFee.get";
  "RiverV1.getAllowlist";
  "AllowlistAddress.get";
  "RiverV1.getCollector";
  "CollectorAddress.get";
  "RiverV1.getELFeeRecipient";
  "ELFeeRecipientAddress.get";
  "RiverV1.getCoverageFund";
  "CoverageFundAddress.get";
  "RiverV1.getRedeemManager";
  "RedeemManagerAddress.get";
  "RiverV1.getMetadataURI";
  "MetadataURI.get";
  "RiverV1.getDailyCommittableLimits";
  "DailyCommittableLimits.get";
  "RiverV1.setDailyCommittableLimits";
  "RiverV1.getBalanceToRedeem";
  "BalanceToRedeem.get";
  "RiverV1.resolveRedeemRequests";
  "RiverV1.IRedeemManagerV1";
  "RiverV1.requestRedeem";
  "RiverV1.IAllowlistV1";
  "RiverV1._transfer";
  "RiverV1.claimRedeemRequests";
  "RiverV1.setGlobalFee";
  "RiverV1.setAllowlist";
  "RiverV1.setCollector";
  "RiverV1.setELFeeRecipient";
  "RiverV1.setCoverageFund";
  "CoverageFundAddress.set";
  "RiverV1.SetCoverageFund";
  "RiverV1.setMetadataURI";
  "LibSanitize._notEmptyString";
  "MetadataURI.set";
  "RiverV1.SetMetadataURI";
  "RiverV1.getOperatorsRegistry";
  "OperatorsRegistryAddress.get";
  "RiverV1.sendELFees";
  "LibErrors.Unauthorized";
  "RiverV1.sendCLFunds";
  "WithdrawalCredentials.getAddress";
  "RiverV1.sendCoverageFunds";
  "RiverV1.sendRedeemManagerExceedingFunds";
  "RiverV1._getRiverAdmin";
  "Administrable._getAdmin";
  "RiverV1._onTransfer";
  "IAllowlistV1.isDenied";
  "RiverV1.Denied";
  "RiverV1._onDeposit";
  "SharesManagerV1._mintShares";
  "IAllowlistV1.onlyAllowed";
  "RiverV1._getNextValidators";
  "RiverV1.IOperatorsRegistryV1";
  "RiverV1._pullELFees";
  "RiverV1.IELFeeRecipientV1";
  "RiverV1.payable";
  "RiverV1.PulledELFees";
  "RiverV1._pullCoverageFunds";
  "RiverV1.ICoverageFundV1";
  "RiverV1.PulledCoverageFunds";
  "RiverV1._onEarnings";
  "RiverV1._totalSupply";
  "RiverV1.ZeroMintedShares";
  "RiverV1._assetBalance";
  "RiverV1._mintRawShares";
  "RiverV1.RewardsEarned";
  "LastConsensusLayerReport.get";
  "DepositedValidatorCount.get";
  "DailyCommittableLimits.set";
  "RiverV1.SetMaxDailyCommittableAmounts";
  "RiverV1.SetBalanceToDeposit";
  "BalanceToDeposit.set";
  "RiverV1._setBalanceToRedeem";
  "RiverV1.SetBalanceToRedeem";
  "BalanceToRedeem.set";
  "RiverV1.SetBalanceCommittedToDeposit";
  "CommittedBalance.set";
  "RiverV1._pullCLFunds";
  "RiverV1.IWithdrawV1";
  "RiverV1.InvalidPulledClFundsAmount";
  "RiverV1.PulledCLFunds";
  "RiverV1._pullRedeemManagerExceedingEth";
  "RiverV1.PulledRedeemManagerExceedingEth";
  "RiverV1._reportWithdrawToRedeemManager";
  "IRedeemManagerV1.getRedeemDemand";
  "RiverV1._balanceFromShares";
  "RiverV1._sharesFromBalance";
  "RiverV1.ReportedRedeemManager";
  "RiverV1._burnRawShares";
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings";
  "LibUint256.min";
  "IOperatorsRegistryV1.getStoppedAndRequestedExitCounts";
  "LibUint256.ceil";
  "IOperatorsRegistryV1.demandValidatorExits";
  "RiverV1._skimExcessBalanceToRedeem";
  "RiverV1._commitBalanceToDeposit";
  "LibUint256.max";
  "RiverV1.initRiverV1" -> "RiverV1._setAdmin" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1" -> "CollectorAddress.set" [ color = "white" ];
  "RiverV1.initRiverV1" -> "RiverV1.SetCollector" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1" -> "GlobalFee.set" [ color = "white" ];
  "RiverV1.initRiverV1" -> "RiverV1.SetGlobalFee" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1" -> "ELFeeRecipientAddress.set" [ color = "white" ];
  "RiverV1.initRiverV1" -> "RiverV1.SetELFeeRecipient" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1" -> "AllowlistAddress.set" [ color = "white" ];
  "RiverV1.initRiverV1" -> "RiverV1.SetAllowlist" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1" -> "OperatorsRegistryAddress.set" [ color = "white" ];
  "RiverV1.initRiverV1" -> "RiverV1.SetOperatorsRegistry" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1" -> "ConsensusLayerDepositManagerV1.initConsensusLayerDepositManagerV1" [ color = "white" ];
  "RiverV1.initRiverV1" -> "OracleManagerV1.initOracleManagerV1" [ color = "white" ];
  "RiverV1.initRiverV1_1" -> "RedeemManagerAddress.set" [ color = "white" ];
  "RiverV1.initRiverV1_1" -> "RiverV1.SetRedeemManager" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1_1" -> "RiverV1._setDailyCommittableLimits" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1_1" -> "DailyCommittableLimits.DailyCommittableLimitsStruct" [ color = "white" ];
  "RiverV1.initRiverV1_1" -> "RiverV1.initOracleManagerV1_1" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1_1" -> "RiverV1._approve" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1_1" -> "RiverV1.type" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1_2" -> "CommittedBalance.get" [ color = "white" ];
  "RiverV1.initRiverV1_2" -> "RiverV1._setCommittedBalance" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1_2" -> "CommittedBalance.get" [ color = "white" ];
  "RiverV1.initRiverV1_2" -> "RiverV1._setBalanceToDeposit" [ color = "#1bc6a6" ];
  "RiverV1.initRiverV1_2" -> "BalanceToDeposit.get" [ color = "white" ];
  "RiverV1.getGlobalFee" -> "GlobalFee.get" [ color = "white" ];
  "RiverV1.getAllowlist" -> "AllowlistAddress.get" [ color = "white" ];
  "RiverV1.getCollector" -> "CollectorAddress.get" [ color = "white" ];
  "RiverV1.getELFeeRecipient" -> "ELFeeRecipientAddress.get" [ color = "white" ];
  "RiverV1.getCoverageFund" -> "CoverageFundAddress.get" [ color = "white" ];
  "RiverV1.getRedeemManager" -> "RedeemManagerAddress.get" [ color = "white" ];
  "RiverV1.getMetadataURI" -> "MetadataURI.get" [ color = "white" ];
  "RiverV1.getDailyCommittableLimits" -> "DailyCommittableLimits.get" [ color = "white" ];
  "RiverV1.setDailyCommittableLimits" -> "RiverV1._setDailyCommittableLimits" [ color = "#1bc6a6" ];
  "RiverV1.getBalanceToRedeem" -> "BalanceToRedeem.get" [ color = "white" ];
  "RiverV1.resolveRedeemRequests" -> "RiverV1.IRedeemManagerV1" [ color = "#1bc6a6" ];
  "RiverV1.resolveRedeemRequests" -> "RedeemManagerAddress.get" [ color = "white" ];
  "RiverV1.requestRedeem" -> "RiverV1.IAllowlistV1" [ color = "#1bc6a6" ];
  "RiverV1.requestRedeem" -> "AllowlistAddress.get" [ color = "white" ];
  "RiverV1.requestRedeem" -> "RiverV1._transfer" [ color = "#1bc6a6" ];
  "RiverV1.requestRedeem" -> "RiverV1.IRedeemManagerV1" [ color = "#1bc6a6" ];
  "RiverV1.requestRedeem" -> "RedeemManagerAddress.get" [ color = "white" ];
  "RiverV1.claimRedeemRequests" -> "RiverV1.IRedeemManagerV1" [ color = "#1bc6a6" ];
  "RiverV1.claimRedeemRequests" -> "RedeemManagerAddress.get" [ color = "white" ];
  "RiverV1.claimRedeemRequests" -> "RiverV1.type" [ color = "#1bc6a6" ];
  "RiverV1.setGlobalFee" -> "GlobalFee.set" [ color = "white" ];
  "RiverV1.setGlobalFee" -> "RiverV1.SetGlobalFee" [ color = "#1bc6a6" ];
  "RiverV1.setAllowlist" -> "AllowlistAddress.set" [ color = "white" ];
  "RiverV1.setAllowlist" -> "RiverV1.SetAllowlist" [ color = "#1bc6a6" ];
  "RiverV1.setCollector" -> "CollectorAddress.set" [ color = "white" ];
  "RiverV1.setCollector" -> "RiverV1.SetCollector" [ color = "#1bc6a6" ];
  "RiverV1.setELFeeRecipient" -> "ELFeeRecipientAddress.set" [ color = "white" ];
  "RiverV1.setELFeeRecipient" -> "RiverV1.SetELFeeRecipient" [ color = "#1bc6a6" ];
  "RiverV1.setCoverageFund" -> "CoverageFundAddress.set" [ color = "white" ];
  "RiverV1.setCoverageFund" -> "RiverV1.SetCoverageFund" [ color = "#1bc6a6" ];
  "RiverV1.setMetadataURI" -> "LibSanitize._notEmptyString" [ color = "white" ];
  "RiverV1.setMetadataURI" -> "MetadataURI.set" [ color = "white" ];
  "RiverV1.setMetadataURI" -> "RiverV1.SetMetadataURI" [ color = "#1bc6a6" ];
  "RiverV1.getOperatorsRegistry" -> "OperatorsRegistryAddress.get" [ color = "white" ];
  "RiverV1.sendELFees" -> "ELFeeRecipientAddress.get" [ color = "white" ];
  "RiverV1.sendELFees" -> "LibErrors.Unauthorized" [ color = "white" ];
  "RiverV1.sendCLFunds" -> "WithdrawalCredentials.getAddress" [ color = "white" ];
  "RiverV1.sendCLFunds" -> "LibErrors.Unauthorized" [ color = "white" ];
  "RiverV1.sendCoverageFunds" -> "CoverageFundAddress.get" [ color = "white" ];
  "RiverV1.sendCoverageFunds" -> "LibErrors.Unauthorized" [ color = "white" ];
  "RiverV1.sendRedeemManagerExceedingFunds" -> "RedeemManagerAddress.get" [ color = "white" ];
  "RiverV1.sendRedeemManagerExceedingFunds" -> "LibErrors.Unauthorized" [ color = "white" ];
  "RiverV1._getRiverAdmin" -> "Administrable._getAdmin" [ color = "white" ];
  "RiverV1._onTransfer" -> "RiverV1.IAllowlistV1" [ color = "#1bc6a6" ];
  "RiverV1._onTransfer" -> "AllowlistAddress.get" [ color = "white" ];
  "RiverV1._onTransfer" -> "IAllowlistV1.isDenied" [ color = "white" ];
  "RiverV1._onTransfer" -> "RiverV1.Denied" [ color = "#1bc6a6" ];
  "RiverV1._onTransfer" -> "IAllowlistV1.isDenied" [ color = "white" ];
  "RiverV1._onTransfer" -> "RiverV1.Denied" [ color = "#1bc6a6" ];
  "RiverV1._onDeposit" -> "SharesManagerV1._mintShares" [ color = "white" ];
  "RiverV1._onDeposit" -> "RiverV1.IAllowlistV1" [ color = "#1bc6a6" ];
  "RiverV1._onDeposit" -> "AllowlistAddress.get" [ color = "white" ];
  "RiverV1._onDeposit" -> "IAllowlistV1.onlyAllowed" [ color = "white" ];
  "RiverV1._onDeposit" -> "IAllowlistV1.onlyAllowed" [ color = "white" ];
  "RiverV1._onDeposit" -> "IAllowlistV1.isDenied" [ color = "white" ];
  "RiverV1._onDeposit" -> "RiverV1.Denied" [ color = "#1bc6a6" ];
  "RiverV1._onDeposit" -> "RiverV1._transfer" [ color = "#1bc6a6" ];
  "RiverV1._getNextValidators" -> "RiverV1.IOperatorsRegistryV1" [ color = "#1bc6a6" ];
  "RiverV1._getNextValidators" -> "OperatorsRegistryAddress.get" [ color = "white" ];
  "RiverV1._pullELFees" -> "ELFeeRecipientAddress.get" [ color = "white" ];
  "RiverV1._pullELFees" -> "RiverV1.IELFeeRecipientV1" [ color = "#1bc6a6" ];
  "RiverV1._pullELFees" -> "RiverV1.payable" [ color = "#1bc6a6" ];
  "RiverV1._pullELFees" -> "RiverV1._setBalanceToDeposit" [ color = "#1bc6a6" ];
  "RiverV1._pullELFees" -> "BalanceToDeposit.get" [ color = "white" ];
  "RiverV1._pullELFees" -> "RiverV1.PulledELFees" [ color = "#1bc6a6" ];
  "RiverV1._pullCoverageFunds" -> "CoverageFundAddress.get" [ color = "white" ];
  "RiverV1._pullCoverageFunds" -> "RiverV1.ICoverageFundV1" [ color = "#1bc6a6" ];
  "RiverV1._pullCoverageFunds" -> "RiverV1.payable" [ color = "#1bc6a6" ];
  "RiverV1._pullCoverageFunds" -> "RiverV1._setBalanceToDeposit" [ color = "#1bc6a6" ];
  "RiverV1._pullCoverageFunds" -> "BalanceToDeposit.get" [ color = "white" ];
  "RiverV1._pullCoverageFunds" -> "RiverV1.PulledCoverageFunds" [ color = "#1bc6a6" ];
  "RiverV1._onEarnings" -> "RiverV1._totalSupply" [ color = "#1bc6a6" ];
  "RiverV1._onEarnings" -> "RiverV1.ZeroMintedShares" [ color = "#1bc6a6" ];
  "RiverV1._onEarnings" -> "RiverV1._assetBalance" [ color = "#1bc6a6" ];
  "RiverV1._onEarnings" -> "GlobalFee.get" [ color = "white" ];
  "RiverV1._onEarnings" -> "CollectorAddress.get" [ color = "white" ];
  "RiverV1._onEarnings" -> "RiverV1._mintRawShares" [ color = "#1bc6a6" ];
  "RiverV1._onEarnings" -> "RiverV1._totalSupply" [ color = "#1bc6a6" ];
  "RiverV1._onEarnings" -> "RiverV1.RewardsEarned" [ color = "#1bc6a6" ];
  "RiverV1._assetBalance" -> "LastConsensusLayerReport.get" [ color = "white" ];
  "RiverV1._assetBalance" -> "DepositedValidatorCount.get" [ color = "white" ];
  "RiverV1._assetBalance" -> "BalanceToDeposit.get" [ color = "white" ];
  "RiverV1._assetBalance" -> "CommittedBalance.get" [ color = "white" ];
  "RiverV1._assetBalance" -> "BalanceToRedeem.get" [ color = "white" ];
  "RiverV1._assetBalance" -> "BalanceToDeposit.get" [ color = "white" ];
  "RiverV1._assetBalance" -> "CommittedBalance.get" [ color = "white" ];
  "RiverV1._assetBalance" -> "BalanceToRedeem.get" [ color = "white" ];
  "RiverV1._setDailyCommittableLimits" -> "DailyCommittableLimits.set" [ color = "white" ];
  "RiverV1._setDailyCommittableLimits" -> "RiverV1.SetMaxDailyCommittableAmounts" [ color = "#1bc6a6" ];
  "RiverV1._setBalanceToDeposit" -> "RiverV1.SetBalanceToDeposit" [ color = "#1bc6a6" ];
  "RiverV1._setBalanceToDeposit" -> "BalanceToDeposit.get" [ color = "white" ];
  "RiverV1._setBalanceToDeposit" -> "BalanceToDeposit.set" [ color = "white" ];
  "RiverV1._setBalanceToRedeem" -> "RiverV1.SetBalanceToRedeem" [ color = "#1bc6a6" ];
  "RiverV1._setBalanceToRedeem" -> "BalanceToRedeem.get" [ color = "white" ];
  "RiverV1._setBalanceToRedeem" -> "BalanceToRedeem.set" [ color = "white" ];
  "RiverV1._setCommittedBalance" -> "RiverV1.SetBalanceCommittedToDeposit" [ color = "#1bc6a6" ];
  "RiverV1._setCommittedBalance" -> "CommittedBalance.get" [ color = "white" ];
  "RiverV1._setCommittedBalance" -> "CommittedBalance.set" [ color = "white" ];
  "RiverV1._pullCLFunds" -> "RiverV1.IWithdrawV1" [ color = "#1bc6a6" ];
  "RiverV1._pullCLFunds" -> "WithdrawalCredentials.getAddress" [ color = "white" ];
  "RiverV1._pullCLFunds" -> "RiverV1.InvalidPulledClFundsAmount" [ color = "#1bc6a6" ];
  "RiverV1._pullCLFunds" -> "RiverV1._setBalanceToDeposit" [ color = "#1bc6a6" ];
  "RiverV1._pullCLFunds" -> "BalanceToDeposit.get" [ color = "white" ];
  "RiverV1._pullCLFunds" -> "RiverV1._setBalanceToRedeem" [ color = "#1bc6a6" ];
  "RiverV1._pullCLFunds" -> "BalanceToRedeem.get" [ color = "white" ];
  "RiverV1._pullCLFunds" -> "RiverV1.PulledCLFunds" [ color = "#1bc6a6" ];
  "RiverV1._pullRedeemManagerExceedingEth" -> "RiverV1.IRedeemManagerV1" [ color = "#1bc6a6" ];
  "RiverV1._pullRedeemManagerExceedingEth" -> "RedeemManagerAddress.get" [ color = "white" ];
  "RiverV1._pullRedeemManagerExceedingEth" -> "RiverV1._setBalanceToDeposit" [ color = "#1bc6a6" ];
  "RiverV1._pullRedeemManagerExceedingEth" -> "BalanceToDeposit.get" [ color = "white" ];
  "RiverV1._pullRedeemManagerExceedingEth" -> "RiverV1.PulledRedeemManagerExceedingEth" [ color = "#1bc6a6" ];
  "RiverV1._reportWithdrawToRedeemManager" -> "RiverV1.IRedeemManagerV1" [ color = "#1bc6a6" ];
  "RiverV1._reportWithdrawToRedeemManager" -> "RedeemManagerAddress.get" [ color = "white" ];
  "RiverV1._reportWithdrawToRedeemManager" -> "RiverV1._assetBalance" [ color = "#1bc6a6" ];
  "RiverV1._reportWithdrawToRedeemManager" -> "RiverV1._totalSupply" [ color = "#1bc6a6" ];
  "RiverV1._reportWithdrawToRedeemManager" -> "IRedeemManagerV1.getRedeemDemand" [ color = "white" ];
  "RiverV1._reportWithdrawToRedeemManager" -> "RiverV1._balanceFromShares" [ color = "#1bc6a6" ];
  "RiverV1._reportWithdrawToRedeemManager" -> "BalanceToRedeem.get" [ color = "white" ];
  "RiverV1._reportWithdrawToRedeemManager" -> "RiverV1._sharesFromBalance" [ color = "#1bc6a6" ];
  "RiverV1._reportWithdrawToRedeemManager" -> "RiverV1.ReportedRedeemManager" [ color = "#1bc6a6" ];
  "RiverV1._reportWithdrawToRedeemManager" -> "RiverV1._setBalanceToRedeem" [ color = "#1bc6a6" ];
  "RiverV1._reportWithdrawToRedeemManager" -> "RiverV1._burnRawShares" [ color = "#1bc6a6" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "RiverV1.IOperatorsRegistryV1" [ color = "#1bc6a6" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "OperatorsRegistryAddress.get" [ color = "white" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "DepositedValidatorCount.get" [ color = "white" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "RiverV1._totalSupply" [ color = "#1bc6a6" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "BalanceToRedeem.get" [ color = "white" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "BalanceToDeposit.get" [ color = "white" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "RiverV1._balanceFromShares" [ color = "#1bc6a6" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "RiverV1.IRedeemManagerV1" [ color = "#1bc6a6" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "RedeemManagerAddress.get" [ color = "white" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "LibUint256.min" [ color = "white" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "RiverV1._setBalanceToRedeem" [ color = "#1bc6a6" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "RiverV1._setBalanceToDeposit" [ color = "#1bc6a6" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "RiverV1.IOperatorsRegistryV1" [ color = "#1bc6a6" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "OperatorsRegistryAddress.get" [ color = "white" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "IOperatorsRegistryV1.getStoppedAndRequestedExitCounts" [ color = "white" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "LibUint256.ceil" [ color = "white" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "IOperatorsRegistryV1.demandValidatorExits" [ color = "white" ];
  "RiverV1._requestExitsBasedOnRedeemDemandAfterRebalancings" -> "DepositedValidatorCount.get" [ color = "white" ];
  "RiverV1._skimExcessBalanceToRedeem" -> "BalanceToRedeem.get" [ color = "white" ];
  "RiverV1._skimExcessBalanceToRedeem" -> "RiverV1._setBalanceToDeposit" [ color = "#1bc6a6" ];
  "RiverV1._skimExcessBalanceToRedeem" -> "BalanceToDeposit.get" [ color = "white" ];
  "RiverV1._skimExcessBalanceToRedeem" -> "RiverV1._setBalanceToRedeem" [ color = "#1bc6a6" ];
  "RiverV1._commitBalanceToDeposit" -> "RiverV1._assetBalance" [ color = "#1bc6a6" ];
  "RiverV1._commitBalanceToDeposit" -> "BalanceToDeposit.get" [ color = "white" ];
  "RiverV1._commitBalanceToDeposit" -> "DailyCommittableLimits.get" [ color = "white" ];
  "RiverV1._commitBalanceToDeposit" -> "LibUint256.max" [ color = "white" ];
  "RiverV1._commitBalanceToDeposit" -> "LibUint256.min" [ color = "white" ];
  "RiverV1._commitBalanceToDeposit" -> "RiverV1._setCommittedBalance" [ color = "#1bc6a6" ];
  "RiverV1._commitBalanceToDeposit" -> "CommittedBalance.get" [ color = "white" ];
  "RiverV1._commitBalanceToDeposit" -> "RiverV1._setBalanceToDeposit" [ color = "#1bc6a6" ];


rankdir=LR
node [shape=plaintext]
subgraph cluster_01 { 
label = "Legend";
key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td align="right" port="i1">Internal Call</td></tr>
  <tr><td align="right" port="i2">External Call</td></tr>
  <tr><td align="right" port="i3">Defined Contract</td></tr>
  <tr><td align="right" port="i4">Undefined Contract</td></tr>
  </table>>]
key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td port="i1">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i2">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i3" bgcolor="#445773">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i4">
    <table border="1" cellborder="0" cellspacing="0" cellpadding="7" color="#e8726d">
      <tr>
       <td></td>
      </tr>
     </table>
  </td></tr>
  </table>>]
key:i1:e -> key2:i1:w [color="#1bc6a6"]
key:i2:e -> key2:i2:w [color="white"]
}
}
