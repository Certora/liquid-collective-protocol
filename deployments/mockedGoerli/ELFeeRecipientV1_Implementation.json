{
  "address": "0xF3b4DFF27cF4665f7373DCD2A28E60B59B88e53c",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expectedVersion",
          "type": "uint256"
        }
      ],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "compound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_riverAddress",
          "type": "address"
        }
      ],
      "name": "initELFeeRecipientV1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe4e0412b08cf98c9210c2f93b07fd0a56bff71f775cd04342740b353e1646120",
  "receipt": {
    "to": null,
    "from": "0x92D7d6DADe15fcF369534cEb8CD1A27f97185ab3",
    "contractAddress": "0xF3b4DFF27cF4665f7373DCD2A28E60B59B88e53c",
    "transactionIndex": 14,
    "gasUsed": "225668",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xf1531ab8f84fcb385e1db64e7076c3b5d0b20737939596cec38ee22afc3dc1c1",
    "transactionHash": "0xe4e0412b08cf98c9210c2f93b07fd0a56bff71f775cd04342740b353e1646120",
    "logs": [],
    "blockNumber": 7231114,
    "cumulativeGasUsed": "2595843",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "09a490197081074b7caaa46a96090f59",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedVersion\",\"type\":\"uint256\"}],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_riverAddress\",\"type\":\"address\"}],\"name\":\"initELFeeRecipientV1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Kiln\",\"kind\":\"dev\",\"methods\":{\"initELFeeRecipientV1(address)\":{\"params\":{\"_riverAddress\":\"Address of River\"}}},\"title\":\"Execution Layer Fee Recipient\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"compound()\":{\"notice\":\"Counpounds all the current balance inside river\"},\"initELFeeRecipientV1(address)\":{\"notice\":\"Initialize the fee recipient with the required arguments\"}},\"notice\":\"This contract receives all the execution layer fees from the proposed blocks + bribes\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/ELFeeRecipient.1.sol\":\"ELFeeRecipientV1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/src/ELFeeRecipient.1.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\nimport \\\"./Initializable.sol\\\";\\nimport \\\"./libraries/Errors.sol\\\";\\nimport \\\"./libraries/LibOwnable.sol\\\";\\nimport \\\"./interfaces/IRiverDonationInput.sol\\\";\\n\\nimport \\\"./state/shared/RiverAddress.sol\\\";\\n\\n/// @title Execution Layer Fee Recipient\\n/// @author Kiln\\n/// @notice This contract receives all the execution layer fees from the proposed blocks + bribes\\ncontract ELFeeRecipientV1 is Initializable {\\n    error InvalidCall();\\n\\n    /// @notice Initialize the fee recipient with the required arguments\\n    /// @param _riverAddress Address of River\\n    function initELFeeRecipientV1(address _riverAddress) external init(0) {\\n        RiverAddress.set(_riverAddress);\\n    }\\n\\n    /// @notice Counpounds all the current balance inside river\\n    function compound() external {\\n        IRiverDonationInput river = IRiverDonationInput(RiverAddress.get());\\n        river.donate{value: address(this).balance}();\\n    }\\n\\n    /// @notice Ether receiver\\n    receive() external payable {\\n        this;\\n    }\\n\\n    /// @notice Invalid fallback detector\\n    fallback() external payable {\\n        revert InvalidCall();\\n    }\\n}\\n\",\"keccak256\":\"0x3a4d561601e23b1eb1a15c7a84561b1880a679b3710b3462e25f60b365f05e4d\",\"license\":\"BUSL-1.1\"},\"contracts/src/Initializable.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\nimport \\\"./state/shared/Version.sol\\\";\\n\\ncontract Initializable {\\n    error InvalidInitialization(uint256 version, uint256 expectedVersion);\\n\\n    modifier init(uint256 version) {\\n        if (version != Version.get()) {\\n            revert InvalidInitialization(version, Version.get());\\n        }\\n        Version.set(version + 1); // prevents reentrency on the called method\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xc93555f4bd660f91e565f20753e0d3a01e783e673bc0209d0d1e33c7b6941053\",\"license\":\"BUSL-1.1\"},\"contracts/src/interfaces/IRiverDonationInput.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\ninterface IRiverDonationInput {\\n    function donate() external payable;\\n}\\n\",\"keccak256\":\"0x13c1f5d258fbb006ea13ca65de465605f93e0cde0b70f101f1e44d241d1f8dc2\",\"license\":\"BUSL-1.1\"},\"contracts/src/libraries/Errors.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\nlibrary Errors {\\n    error Unauthorized(address caller);\\n    error InvalidCall();\\n    error InvalidArgument();\\n}\\n\",\"keccak256\":\"0xf3d3cec3d3d583aac19da0ace05f7ee067d47fd67e2a1f5f3195d7cbc5329325\",\"license\":\"BUSL-1.1\"},\"contracts/src/libraries/LibOwnable.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\nimport \\\"../state/shared/AdministratorAddress.sol\\\";\\n\\nlibrary LibOwnable {\\n    function _setAdmin(address newAdmin) internal {\\n        AdministratorAddress.set(newAdmin);\\n    }\\n\\n    function _getAdmin() internal view returns (address) {\\n        return AdministratorAddress.get();\\n    }\\n}\\n\",\"keccak256\":\"0xc189956546f854193e5fea6225b6eb0262ab192a97c4e32575eefe8205549794\",\"license\":\"BUSL-1.1\"},\"contracts/src/libraries/UnstructuredStorage.sol\":{\"content\":\"/*\\n * SPDX-License-Identifier:    MIT\\n */\\n\\npragma solidity 0.8.10;\\n\\nlibrary UnstructuredStorage {\\n    function getStorageBool(bytes32 position) internal view returns (bool data) {\\n        assembly {\\n            data := sload(position)\\n        }\\n    }\\n\\n    function getStorageAddress(bytes32 position) internal view returns (address data) {\\n        assembly {\\n            data := sload(position)\\n        }\\n    }\\n\\n    function getStorageBytes32(bytes32 position) internal view returns (bytes32 data) {\\n        assembly {\\n            data := sload(position)\\n        }\\n    }\\n\\n    function getStorageUint256(bytes32 position) internal view returns (uint256 data) {\\n        assembly {\\n            data := sload(position)\\n        }\\n    }\\n\\n    function setStorageBool(bytes32 position, bool data) internal {\\n        assembly {\\n            sstore(position, data)\\n        }\\n    }\\n\\n    function setStorageAddress(bytes32 position, address data) internal {\\n        assembly {\\n            sstore(position, data)\\n        }\\n    }\\n\\n    function setStorageBytes32(bytes32 position, bytes32 data) internal {\\n        assembly {\\n            sstore(position, data)\\n        }\\n    }\\n\\n    function setStorageUint256(bytes32 position, uint256 data) internal {\\n        assembly {\\n            sstore(position, data)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x52ccf1daa33de9c72831e0d7458928c37ca7b5f8d8f732114095edeb81339920\",\"license\":\"MIT\"},\"contracts/src/state/shared/AdministratorAddress.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\nimport \\\"../../libraries/UnstructuredStorage.sol\\\";\\n\\nlibrary AdministratorAddress {\\n    bytes32 public constant ADMINISTRATOR_ADDRESS_SLOT =\\n        bytes32(uint256(keccak256(\\\"river.state.administratorAddress\\\")) - 1);\\n\\n    function get() internal view returns (address) {\\n        return UnstructuredStorage.getStorageAddress(ADMINISTRATOR_ADDRESS_SLOT);\\n    }\\n\\n    function set(address newValue) internal {\\n        UnstructuredStorage.setStorageAddress(ADMINISTRATOR_ADDRESS_SLOT, newValue);\\n    }\\n}\\n\",\"keccak256\":\"0x6c103a106ff958994c38f055a316144416df36aeb299ba660e7b8af063931b72\",\"license\":\"BUSL-1.1\"},\"contracts/src/state/shared/RiverAddress.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\nimport \\\"../../libraries/UnstructuredStorage.sol\\\";\\n\\nlibrary RiverAddress {\\n    bytes32 internal constant RIVER_ADDRESS_SLOT = bytes32(uint256(keccak256(\\\"river.state.riverAddress\\\")) - 1);\\n\\n    function get() internal view returns (address) {\\n        return UnstructuredStorage.getStorageAddress(RIVER_ADDRESS_SLOT);\\n    }\\n\\n    function set(address newValue) internal {\\n        UnstructuredStorage.setStorageAddress(RIVER_ADDRESS_SLOT, newValue);\\n    }\\n}\\n\",\"keccak256\":\"0x2fff0ef976b74cb3ec973968d6ebae2aa1796c8bf6f1c45cb5478bd980785d1c\",\"license\":\"BUSL-1.1\"},\"contracts/src/state/shared/Version.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\nimport \\\"../../libraries/UnstructuredStorage.sol\\\";\\n\\nlibrary Version {\\n    bytes32 public constant VERSION_SLOT = bytes32(uint256(keccak256(\\\"river.state.version\\\")) - 1);\\n\\n    function get() internal view returns (uint256) {\\n        return UnstructuredStorage.getStorageUint256(VERSION_SLOT);\\n    }\\n\\n    function set(uint256 newValue) internal {\\n        UnstructuredStorage.setStorageUint256(VERSION_SLOT, newValue);\\n    }\\n}\\n\",\"keccak256\":\"0xf90d1ecf583061aa70dc464ec1fde21da6e9309601bcbba38f47d26257a1c656\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610323806100206000396000f3fe60806040526004361061002d5760003560e01c80635404dd7914610066578063f69e20461461008857610034565b3661003457005b6040517fae962d4e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34801561007257600080fd5b50610086610081366004610252565b61009d565b005b34801561009457600080fd5b50610086610115565b60006100a7610185565b81146100f557806100b6610185565b6040517fe7e93b380000000000000000000000000000000000000000000000000000000081526004810192909252602482015260440160405180910390fd5b6101086101038260016102be565b6101be565b610111826101f4565b5050565b600061011f610222565b90508073ffffffffffffffffffffffffffffffffffffffff1663ed88c68e476040518263ffffffff1660e01b81526004016000604051808303818588803b15801561016957600080fd5b505af115801561017d573d6000803e3d6000fd5b505050505050565b60006101b96101b560017f82055909238c0f5e63d6f174068ebb8f51bcec9bd37de63bb68f6551feec0cfd6102d6565b5490565b905090565b6101f16101ec60017f82055909238c0f5e63d6f174068ebb8f51bcec9bd37de63bb68f6551feec0cfd6102d6565b829055565b50565b6101f16101ec60017f1ec4138404500a2a0be2c2f9b103581c2a7fa783a934f91a6cc5cc924404973c6102d6565b60006101b96101b560017f1ec4138404500a2a0be2c2f9b103581c2a7fa783a934f91a6cc5cc924404973c6102d6565b60006020828403121561026457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461028857600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156102d1576102d161028f565b500190565b6000828210156102e8576102e861028f565b50039056fea2646970667358221220aaad02b11604b6459f57782637ddb61e91d39a735926bdf2310598469299e57164736f6c634300080a0033",
  "deployedBytecode": "0x60806040526004361061002d5760003560e01c80635404dd7914610066578063f69e20461461008857610034565b3661003457005b6040517fae962d4e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34801561007257600080fd5b50610086610081366004610252565b61009d565b005b34801561009457600080fd5b50610086610115565b60006100a7610185565b81146100f557806100b6610185565b6040517fe7e93b380000000000000000000000000000000000000000000000000000000081526004810192909252602482015260440160405180910390fd5b6101086101038260016102be565b6101be565b610111826101f4565b5050565b600061011f610222565b90508073ffffffffffffffffffffffffffffffffffffffff1663ed88c68e476040518263ffffffff1660e01b81526004016000604051808303818588803b15801561016957600080fd5b505af115801561017d573d6000803e3d6000fd5b505050505050565b60006101b96101b560017f82055909238c0f5e63d6f174068ebb8f51bcec9bd37de63bb68f6551feec0cfd6102d6565b5490565b905090565b6101f16101ec60017f82055909238c0f5e63d6f174068ebb8f51bcec9bd37de63bb68f6551feec0cfd6102d6565b829055565b50565b6101f16101ec60017f1ec4138404500a2a0be2c2f9b103581c2a7fa783a934f91a6cc5cc924404973c6102d6565b60006101b96101b560017f1ec4138404500a2a0be2c2f9b103581c2a7fa783a934f91a6cc5cc924404973c6102d6565b60006020828403121561026457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461028857600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156102d1576102d161028f565b500190565b6000828210156102e8576102e861028f565b50039056fea2646970667358221220aaad02b11604b6459f57782637ddb61e91d39a735926bdf2310598469299e57164736f6c634300080a0033",
  "devdoc": {
    "author": "Kiln",
    "kind": "dev",
    "methods": {
      "initELFeeRecipientV1(address)": {
        "params": {
          "_riverAddress": "Address of River"
        }
      }
    },
    "title": "Execution Layer Fee Recipient",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "compound()": {
        "notice": "Counpounds all the current balance inside river"
      },
      "initELFeeRecipientV1(address)": {
        "notice": "Initialize the fee recipient with the required arguments"
      }
    },
    "notice": "This contract receives all the execution layer fees from the proposed blocks + bribes",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}